nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
# visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
# visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 1)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
table(degree(graph, mode = "in"))
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 10))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
# visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 1)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
V(graph)$degree <- degree(graph, mode = "all")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 20))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
# visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 1)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
V(graph)$degree <- degree(graph, mode = "all")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 20))
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
V(graph)$degree <- degree(graph, mode = "all")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 20))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
table(degree(graph_trim, mode = "all") )
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
V(graph)$degree <- degree(graph, mode = "all")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 20))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
table(degree(graph_trim, mode = "all") )
table(degree(graph_trim, mode = "all") )
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
z <- visIgraph(graph_trim, layout = "layout_with_fr")
visSave(z, file = "z.html", selfcontained = FALSE, background = "black")
z <- visIgraph(graph_trim, layout = "layout_nicely")
visSave(z, file = "z.html", selfcontained = FALSE, background = "black")
str(nodes_trim)
degree(graph_trim, mode = "in")
degree(graph_trim, mode = "in")[1]
nodes_trim[1,]
nodes_trim$size <- degree(graph_trim, mode = "in")
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) %>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) #%>%
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
datanames())
names(data)
nodes_trim$title <- data$Title
str(nodes_trim)
nods_trim$id,
head(data[,c("Lens.ID","Title")])
head(nods_trim$id)
head(nodes_trim$id)
head(nodes_trim)
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID")
head(test)
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID")
head(test)
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = F)
head(test)
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = F, all.y = T)
head(test)
nodes_trim <- get.data.frame(graph_trim, what="vertices")
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = F, all.y = T)
head(test)
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = F, all.y = T)
head(test)
test <- merge(data[,c("Lens.ID","Title")], nodes_trim,, , by.y = "id", all.x = F, all.y = T)
head(test)
test <- merge(data[,c("Lens.ID","Title")], nodes_trim,by.x = "Lens.ID", by.y = "id" , all.x = F, all.y = T)
head(test)
test <- merge(data[,c("Lens.ID","Title")], nodes_trim,by.x = "Lens.ID", by.y = "id" , all.x = T, all.y = F)
head(test)
test <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID")
head(test)
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID")
head(nodes_trim)
nodes_trim <- nodes_trim[,c("id","Title")]
head(nodes_trim)
colnames(nodes_trim)
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE) #%>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
# visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
head(data)
data[1]
data[1,]
str(data[1,])
data[1,]$Fields.of.Study
data[2,]$Fields.of.Study
?mutate
data[1,]$Fields.of.Study
?visInteractoin
?visInteraction
V(graph)$degree <- degree(graph, mode = "all")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 10))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
table(degree(graph_trim, mode = "all") )
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
# visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
# data <- read.csv("lens-export.csv")
data <- read.csv("bcp_math.csv")
link_creator <- function(line){
source_uuid <- as.character(line$Lens.ID)
references <- c(sapply(strsplit(as.character(line$References), split = ";"),
function(x) gsub(" ", "", x, fixed = TRUE)))
if( line$References == "" ){
n_ref <- 0
return(matrix(0, nrow = 0, ncol = 2))
} else {
n_ref <- length(references)
vec = matrix(0, nrow = n_ref, ncol = 2)
vec[,1] <- source_uuid
vec[,2] <- references
return(vec)
}
}
x = matrix(0,0,2)
n <- dim(data)[1]
system.time(
for(i in 1:n){
link <- link_creator(data[i,])
x <- rbind(x,link)
#print(paste0("iteration ",i))
cat("\r", "iteration ",i,", ",i / n*100,"% complete ")
}
)
head(x)
colnames(x) <- c("source","target")
x <- data.frame(x)
graph <- graph.data.frame(x, directed = TRUE)
table(degree(graph, mode = "in"))
table(degree(graph, mode = "out"))
table(degree(graph, mode = "all"))
V(graph)$degree <- degree(graph, mode = "in")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 10))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
table(degree(graph_trim, mode = "all") )
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
data[1,]$Fields.of.Study
V(graph)$degree <- degree(graph, mode = "in")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 2))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
nodes_trim <- get.data.frame(graph_trim, what="vertices")
table(degree(graph_trim, mode = "all") )
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- nodes_trim[,c("id","Title")]
nodes_trim$size <- degree(graph_trim, mode = "in")
colnames(nodes_trim) <- c("id", "title")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
data[1,]$Fields.of.Study
V(graph)$degree <- degree(graph, mode = "in")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 1))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
table(degree(graph_trim, mode = "all") )
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
# visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
V(graph)$degree <- degree(graph, mode = "in")
graph_trim <- delete.vertices(graph, which(V(graph)$degree <= 2))
V(graph_trim)$degree <- degree(graph_trim, mode = "all")
table(degree(graph_trim, mode = "all") )
graph_trim <- delete.vertices(graph_trim, which(V(graph_trim)$degree == 0))
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
# visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
head(nodes_trim)
data$Lens.ID
full_data <- read.csv("lens-export.csv")
nodes_trim <- get.data.frame(graph_trim, what="vertices")
nodes_trim <- data.frame(id = nodes_trim$name, title = nodes_trim$name)
nodes_trim <- nodes_trim[order(nodes_trim$id, decreasing = F),]
nodes_trim <- merge(nodes_trim, full_data[,c("Lens.ID","Title")], by.x = "id", by.y = "Lens.ID", all.x = T, all.y =F)
nodes_trim <- nodes_trim[,c("id","Title")]
colnames(nodes_trim) <- c("id", "title")
nodes_trim$size <- degree(graph_trim, mode = "in")
edges_trim <- get.data.frame(graph_trim, what="edges")[1:2]
network_trim2_plot <- visNetwork(nodes_trim, edges_trim, height = "1200px", width = "1920px") %>%
# visIgraphLayout(layout = "layout_in_circle") %>%
visIgraphLayout(layout = "layout_nicely") %>% #defaults to FR
# visIgraphLayout(layout = "layout_with_dh") %>% # slow
# visIgraphLayout(layout = "layout_with_drl") %>% #banana shaped
# visIgraphLayout(layout = "layout_with_fr") %>%
# visIgraphLayout(layout = "layout_with_gem") %>% # slow, star like
# visIgraphLayout(layout = "layout_with_graphopt") %>% # a messier FR
# visIgraphLayout(layout = "layout_with_kk") %>% # FR, but with a hole in the middle
# visIgraphLayout(layout = "layout_with_lgl") %>% # FRish
# visIgraphLayout(layout = "layout_with_mds") %>% #looks good, but slower with big data set
visInteraction(hover = TRUE, navigationButtons = TRUE) #%>%
# visIgraphLayout(layout = "layout_with_sugiyama") %>% # two sided, not useful?
# visNodes(size = 10)
visSave(network_trim2_plot, file = "network_trim2.html", selfcontained = FALSE, background = "black")
# convert DOI to title
data$DOI
# convert DOI to title
data$DOI[1]
require(rcrossref)
install.packages("rcrossref")
install.packages("rcrossref")
require(rcrossref)
